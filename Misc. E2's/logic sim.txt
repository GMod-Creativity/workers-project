@name Wiremod
@inputs EGP:wirelink
@outputs [Gates Selected Colors Ports]:table [Pos Size]:vector2 Type
@outputs LMB RMB Use LOL LOLOL I1
if(first()){
    runOnTick(1)
    EGP:egpClear()
    Size = vec2(32, 32)
    Wires = table()
    Type = 1
    Colors[1, vector] = vec(0, 255, 0)
    Colors[2, vector] = vec(255, 0, 0)
    Colors[3, vector] = vec(0, 0, 255)
    for(I = 0, 7){
        EGP:egpLine(I, vec2(I * 64, 0), vec2(I * 64, 512))
    }
    for(I = 0, 7){
        EGP:egpLine(I + 8, vec2(0, I * 64), vec2(512, I * 64))
    }
}
LMB = owner():keyAttack1()
RMB = owner():keyAttack2()
Use = owner():keyUse()
Pos = round(EGP:egpCursor(owner()) / 64) * 64
if($LMB & LMB & inrange(Pos, vec2(64, 64), vec2(484, 484))){
    NoCreate = 0
    for(I = 0, Gates:count()){
        if(Gates[I, table][1, vector2]:distance(Pos) < 32){
            NoCreate = 1
            break
        }
    }
    if(!NoCreate){
        I1++
        Gates:pushTable(table(Pos, Size, Type, Ports))
        EGP:egpBox(I1 + 16, Gates[I1, table][1, vector2], Gates[I1, table][2, vector2])
        EGP:egpColor(I1 + 16, Colors[Gates[I1, table][3, number], vector])
    }
}
if($RMB & RMB){
    if(Type < 3){
        Type++
    }
    else{
        Type = 1
    }
}
if($Use & Use){
    for(I = 0, Gates:count()){
        if(Gates[I, table][1, vector2]:distance(Pos) < 32){
            Selected = Gates[I, table]
            break
        }
    }
}